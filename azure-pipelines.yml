trigger:
  - master
pool:
  vmImage: windows-latest
variables:
  solution: '**/*.sln'
  buildPlatform: Any CPU
  buildConfiguration: Release
steps:
  - task: UseDotNet@2
    displayName: Install .NET
    inputs:
      packageType: sdk
      version: 6.0.x
      installationPath: $(Agent.ToolsDirectory)/dotnet
      includePreviewVersions: true
      
  - task: DotNetCoreCLI@2
    inputs:
      command: build
      projects: '**/*.csproj'
      
  - task: DotNetCoreCLI@2
    inputs:
      command: custom
      custom: new
      arguments: tool-manifest
      
  - task: DotNetCoreCLI@2
    displayName: Installing Playwright Cli
    inputs:
      command: custom
      custom: tool
      arguments: install Microsoft.Playwright.CLI
      
  - task: DotNetCoreCLI@2
    displayName: Building tests project
    inputs:
      command: build
      projects: '**/*.csproj'
      
  - task: DotNetCoreCLI@2
    displayName: Run Playwright Install
    inputs:
      command: custom
      custom: 'tool '
      arguments: run playwright install
      
  - task: DotNetCoreCLI@2
    displayName: Run tests
    inputs:
      command: test
      projects: '**/*.csproj'
      testRunTitle: new pipeline
      
  - task: SpecFlowPlus@0
    displayName: LivingDoc with TestAssembly generatorSource
    inputs:
      generatorSource: 'TestAssembly'
      testAssemblyFilePath: 'bin/Debug/**/SpecFlowDemo.dll'
      testExecutionJson: '**/TestExecution.json'
      workItemPrefix: 'DEVOPS_WI:'
      workItemUrlTemplate: 'https://dev.azure.com/elaPractice/AgileProcess/_queries/edit/{id}'
    condition: succeededOrFailed()
      
  - task: PublishTestResults@2
    displayName: Publish test results
    inputs:
      searchFolder: 'bin/Debug/**/'
      testResultsFormat: JUnit
      testResultsFiles: '**/*.LivingDoc.html'
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: End To End Test
    condition: succeededOrFailed()